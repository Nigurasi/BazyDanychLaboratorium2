<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="_Bazy_Laboratorium2_BloggingContextDataSet2" targetNamespace="http://tempuri.org/_Bazy_Laboratorium2_BloggingContextDataSet2.xsd" xmlns:mstns="http://tempuri.org/_Bazy_Laboratorium2_BloggingContextDataSet2.xsd" xmlns="http://tempuri.org/_Bazy_Laboratorium2_BloggingContextDataSet2.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="Bazy_Laboratorium2_BloggingContextConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="Bazy_Laboratorium2_BloggingContextConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Bazy_Laboratorium2.Properties.Settings.GlobalReference.Default.Bazy_Laboratorium2_BloggingContextConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="AuthorsTableAdapter" GeneratorDataComponentClassName="AuthorsTableAdapter" Name="Authors" UserDataComponentName="AuthorsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Bazy_Laboratorium2_BloggingContextConnectionString (Settings)" DbObjectName="[Bazy_Laboratorium2.BloggingContext].dbo.Authors" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Authors] WHERE (([BlogId] = @Original_BlogId) AND ([UserName] = @Original_UserName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BlogId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BlogId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_UserName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="UserName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Authors] ([BlogId], [UserName]) VALUES (@BlogId, @UserName);
SELECT BlogId, UserName FROM Authors WHERE (BlogId = @BlogId) AND (UserName = @UserName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BlogId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BlogId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@UserName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="UserName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT BlogId, UserName FROM dbo.Authors</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Authors] SET [BlogId] = @BlogId, [UserName] = @UserName WHERE (([BlogId] = @Original_BlogId) AND ([UserName] = @Original_UserName));
SELECT BlogId, UserName FROM Authors WHERE (BlogId = @BlogId) AND (UserName = @UserName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BlogId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BlogId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@UserName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="UserName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BlogId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BlogId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_UserName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="UserName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="BlogId" DataSetColumn="BlogId" />
              <Mapping SourceColumn="UserName" DataSetColumn="UserName" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="_Bazy_Laboratorium2_BloggingContextDataSet2" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="_Bazy_Laboratorium2_BloggingContextDataSet2" msprop:Generator_UserDSName="_Bazy_Laboratorium2_BloggingContextDataSet2">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Authors" msprop:Generator_TableClassName="AuthorsDataTable" msprop:Generator_TableVarName="tableAuthors" msprop:Generator_RowChangedName="AuthorsRowChanged" msprop:Generator_TablePropName="Authors" msprop:Generator_RowDeletingName="AuthorsRowDeleting" msprop:Generator_RowChangingName="AuthorsRowChanging" msprop:Generator_RowEvHandlerName="AuthorsRowChangeEventHandler" msprop:Generator_RowDeletedName="AuthorsRowDeleted" msprop:Generator_RowClassName="AuthorsRow" msprop:Generator_UserTableName="Authors" msprop:Generator_RowEvArgName="AuthorsRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="BlogId" msprop:Generator_ColumnVarNameInTable="columnBlogId" msprop:Generator_ColumnPropNameInRow="BlogId" msprop:Generator_ColumnPropNameInTable="BlogIdColumn" msprop:Generator_UserColumnName="BlogId" type="xs:int" />
              <xs:element name="UserName" msprop:Generator_ColumnVarNameInTable="columnUserName" msprop:Generator_ColumnPropNameInRow="UserName" msprop:Generator_ColumnPropNameInTable="UserNameColumn" msprop:Generator_UserColumnName="UserName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="128" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Authors" />
      <xs:field xpath="mstns:BlogId" />
      <xs:field xpath="mstns:UserName" />
    </xs:unique>
  </xs:element>
</xs:schema>